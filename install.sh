#!/bin/bash

# CLI Tools v2.0 - Instala√ß√£o Autom√°tica
set -e

echo "üöÄ CLI Tools v2.0 - Instala√ß√£o"
echo "================================"

# Verificar Python
if ! command -v python3 &> /dev/null; then
    echo "‚ùå Python 3 n√£o encontrado. Instale python3 primeiro."
    exit 1
fi

# Criar .venv se n√£o existir
if [ ! -d ".venv" ]; then
    echo "üì¶ Criando ambiente virtual..."
    python3 -m venv .venv
fi

# Ativar .venv
echo "üîß Ativando ambiente virtual..."
source .venv/bin/activate

# Instalar depend√™ncias
echo "üì• Instalando depend√™ncias..."
pip install --upgrade pip
pip install -r requirements.txt

# Criar diret√≥rios necess√°rios
echo "üìÅ Criando estrutura de diret√≥rios..."
mkdir -p materials/{imagens,figma,repos}
mkdir -p data/cache

# Verificar instala√ß√£o
echo "‚úÖ Verificando instala√ß√£o..."
if .venv/bin/python -m src.main --version &> /dev/null; then
    echo "‚úÖ CLI Tools instalado com sucesso!"
    echo ""
    echo "üéØ Para usar:"
    echo "   source .venv/bin/activate"
    echo "   python -m src.main ui"
    echo ""
    echo "   ou diretamente:"
    echo "   .venv/bin/python -m src.main ui"
    echo ""
    echo "üìã Comandos dispon√≠veis:"
    echo "   python -m src.main search 'office desk' -c 1"
    echo "   python -m src.main figma AbCdEfGh123 -f png"
    echo "   python -m src.main repo user/repo -q 'components'"
    echo "   python -m src.main status"
else
    echo "‚ùå Erro na instala√ß√£o. Verifique os logs acima."
    exit 1
fi
